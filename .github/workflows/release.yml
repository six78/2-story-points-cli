name: release

on:
#  push:
#    tags:
#      - v*.*.*
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

#  TODO: rewrite with matrix?

#  macos:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up Go
#        uses: actions/setup-go@v5
#        with:
#          go-version: '1.20'
#
#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v5
#        with:
#          distribution: goreleaser
#          args: build --clean --snapshot --config=ci/.goreleaser-darwin.yml
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  linux:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Install compiler
#        run: sudo apt-get -y install gcc-aarch64-linux-gnu
#
#      - name: Set up Go
#        uses: actions/setup-go@v5
#        with:
#          go-version: '1.20'
#
#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v5
#        with:
#          distribution: goreleaser
#          args: build --clean --snapshot --config=ci/.goreleaser-linux.yml
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - uses: msys2/setup-msys2@v2

      - name: Set up MSYS packages
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm mingw-w64-x86_64-dlfcn
          where libdl.dll
          if [ -e "D:\a\_temp\msys64\mingw64\bin\libdl.dll" ]
          then
            echo "<<<1 dlfcn FOUND"
          else
            echo "<<<1 dlfcn not found"
          fi

      - name: Check MSYS packages
        run: |
          if [ -e "D:\a\_temp\msys64\mingw64\bin\libdl.dll" ]
          then
            echo "<<<2 dlfcn FOUND"
          else
            echo "<<<2 dlfcn not found"
          fi
          LD_LIBRARY_PATH="D:\\a\\_temp\\msys64\\mingw64\\bin;$LD_LIBRARY_PATH"
          echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"

#      - name: Print
#        run: |
#          where libdl.so.2

#      - name: Setup dlfcn-win32
#        run: |
#          git clone https://github.com/dlfcn-win32/dlfcn-win32.git
#          cd dlfcn-win32/
#          chmod u+x configure
#          ./configure
#          make
#          make install

      - name: Run GoReleaser
#        shell: msys2 {0}
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          args: build --clean --snapshot --config=ci/.goreleaser-windows.yml --debug --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}