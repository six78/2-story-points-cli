name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches:
      - "main"
      - "release/**"

permissions:
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "GIT_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> "$GITHUB_ENV"
          echo "GIT_BRANCH=${GITHUB_HEAD_REF}" >> "$GITHUB_ENV"

      - name: Setup Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
          chmod +x /tmp/cc-test-reporter
          /tmp/cc-test-reporter before-build

      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: |
          go install go.uber.org/mock/mockgen@latest

      - name: Setup gotestsum
        uses: autero1/action-gotestsum@v2.0.0
        with:
          gotestsum_version: 1.11.0

      - name: Build
        run: make build-all

      - name: Generate
        run: make generate

      - name: Test
        run: |
          mkdir -p /tmp/test-results
          gotestsum \
              --junitfile /tmp/test-results/gotestsum-report.xml \
              -- \
              -failfast \
              -covermode atomic \
              -coverprofile c.out \
              ./...
          cp c.out /tmp/test-results/coverage.out
          go tool cover -html=c.out -o /tmp/test-results/coverage.html
          /tmp/cc-test-reporter after-build \
            --id ${{ secrets.CC_TEST_REPORTER_ID }} \
            --prefix "github.com/six78/2-story-points-cli" \
            --exit-code $?

      - name: Report tests
        uses: dorny/test-reporter@v1.9.1
        if: success() || failure()
        with:
          name: Go Tests
          path: /tmp/test-results/gotestsum-report.xml
          reporter: jest-junit

      - name: Upload artifcats
        uses: actions/upload-artifact@v4
        with:
          path: |
            /tmp/test-results/gotestsum-report.xml
            /tmp/test-results/coverage.out
            /tmp/test-results/coverage.html

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: |
          go install go.uber.org/mock/mockgen@latest

      - name: Generate
        run: make generate

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.56.2

    permissions:
      contents: read      # Required: allow read access to the content for analysis.
      pull-requests: read # Optional: allow read access to pull request. Use with `only-new-issues` option.
      checks: write
